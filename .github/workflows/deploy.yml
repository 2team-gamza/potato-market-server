name: Backend Server Deploys

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Make .env.prod
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_PORT: 8000
          envkey_NODE_ENV: prod
          envkey_DB_DATABASE: ${{secrets.DB_DATABASE}}
          envkey_DB_USERNAME: ${{secrets.DB_USERNAME}}
          envkey_DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          envkey_DB_PORT: ${{secrets.DB_PORT}}
          envkey_DB_HOST: ${{secrets.DB_HOST}}

          envkey_GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
          envkey_GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
          envkey_GOOGLE_GRANT_TYPE: ${{secrets.GOOGLE_GRANT_TYPE}}

          envkey_SECRET_KEY: ${{secrets.SECRET_KEY}}

          file_name: .env.prod

      - name: version
        id: image-version
        run: |
          VERSION=`cat ./version.txt`-${{ github.run_number }}
          echo "::set-output name=version::$VERSION"

      - name: create deploy/
        run: |
          mkdir -p deploy/nginx
          cp docker-compose.blue.yml docker-compose.green.yml ./scripts/run.sh .env.prod deploy/
          cp nginx/* deploy/nginx

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Build, tag, and push image to ghcr.io
        env:
          DOCKER_REGISTRY: ghcr.io/2team-gamza
          DOCKER_REPOSITORY: potato-backend
          IMAGE_TAG: ${{ steps.image-version.outputs.version }}
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG .
          docker tag $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest

          echo -e "IMAGE=$DOCKER_REGISTRY/$DOCKER_REPOSITORY\nTAG=$IMAGE_TAG" > deploy/.env

      - name: zip deploy.zip
        run: zip -r deploy.zip deploy

      - name: Upload deploy.zip
        uses: actions/upload-artifact@v2
        with:
          name: deploy.zip
          path: deploy.zip

  deploy:
    needs:
      - build
    runs-on: potato-server
    steps:
      - name: Download deploy.zip
        uses: actions/download-artifact@v2
        with:
          name: deploy.zip

      - name: run server
        run: |
          unzip -o ./deploy.zip
          cd deploy/
          sh ./run.sh
